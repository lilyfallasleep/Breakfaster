// Code generated by MockGen. DO NOT EDIT.
// Source: mybot/autoreply/interface.go

// Package mock_autoreply is a generated GoMock package.
package mock_autoreply

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockAutoReplier is a mock of AutoReplier interface
type MockAutoReplier struct {
	ctrl     *gomock.Controller
	recorder *MockAutoReplierMockRecorder
}

// MockAutoReplierMockRecorder is the mock recorder for MockAutoReplier
type MockAutoReplierMockRecorder struct {
	mock *MockAutoReplier
}

// NewMockAutoReplier creates a new mock instance
func NewMockAutoReplier(ctrl *gomock.Controller) *MockAutoReplier {
	mock := &MockAutoReplier{ctrl: ctrl}
	mock.recorder = &MockAutoReplierMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockAutoReplier) EXPECT() *MockAutoReplierMockRecorder {
	return m.recorder
}

// Predict mocks base method
func (m *MockAutoReplier) Predict(userMsg string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Predict", userMsg)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Predict indicates an expected call of Predict
func (mr *MockAutoReplierMockRecorder) Predict(userMsg interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Predict", reflect.TypeOf((*MockAutoReplier)(nil).Predict), userMsg)
}
